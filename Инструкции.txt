https://docs.djangoproject.com/en/3.0/intro/tutorial02/

* Создать проект (из каталога Django, каталог проекта руками создавать не нужно):
django-admin.py startproject <имя проекта> 

* Настройка проекта:
Меняем имя базы на наше (например, 'gan.db'):
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'gan.db'),
    }
}
Язык:
LANGUAGE_CODE = 'ru-ru'
Локализация
TIME_ZONE = 'Europe/Moscow'

* Создать базу из моделей:
manage.py migrate 

* Запустить веб-сервер
manage.py runserver
Остановить сервер: <Ctrl>+<Break>

*Создать суперпользователя
python manage.py createsuperuser
Для проекта gan:
Логин: gan
Пароль: cppcppcpp
e-mail: gubanov-alexey@yandex.ru

* версия Django
python -m django --version

* Создать приложение hat в проекте
manage.py startapp hat

* Активация приложения
To include the app in our project, we need to add a reference to its configuration class in the INSTALLED_APPS setting. 
The HatConfig class is in the hat/apps.py file, so its dotted path is 'hat.apps.HatConfig'. 
Edit the gan/settings.py file and add that dotted path to the INSTALLED_APPS setting. It’ll look like this:

В gan/settings.py:
INSTALLED_APPS = [
    'hat.apps.HatConfig',
    'django.contrib.admin',
	...
]

* Создать миграцию в hat/migrations/0001_initial.py
 manage.py makemigrations hat

* Применить миграцию
 manage.py migrate

* Посмотреть SQL миграции
 manage.py sqlmigrate hat 0001

* Запуск Питоновской оболочки, настроенной на проект
manage.py shell

* Админский сайт
 http://127.0.0.1:8000/admin/
 
* Доступ к дочерним записям модели Choice из Модели Query q.
 q.choice_set.all()
 q.choice_set.create(choice_text='Not much', votes=0)
 
* Статический каталог
 hat/static/hat/style.css
 
* Запустить свой скрипт в окружении Django проще всего как команду Django
Для этого создаем скрипт как Django\gan\hat\management\commands\myscript.py
from django.core.management.base import BaseCommand
class Command(BaseCommand):
  def handle(self, **options):
    пишем здесь код

Вызываем так:
manage.py myscript

svn checkout svn+ssh:https://helixteamhub.cloud/slavonicpro/projects/gan/repositories/subversion/gan/gan —username gubanov-alexey@yandex.ru —password slavonic

GIT
https://pyneng.github.io/docs/git-github/
https://maxsite.org/page/how-to-put-your-project-on-github-com
https://old.calculate-linux.org/main/ru/git


Команда git pull сразу забирает изменения и проводит слияние с активной веткой.
Забрать из репозитория, для которого были созданы удаленные ветки по умолчанию:
git pull

Забрать изменения и метки из определенного репозитория:
git pull username-project --tags

Отправить свои изменения в удаленную ветку, созданную при клонировании по умолчанию:
git push

Для работы с ним локально, его нужно скопировать. Для этого используется команда git clone:
$ git clone ssh://git@github.com/pyneng/online-4-natasha-samoylenko.git

перед началом работы, синхронизируете локальное содержимое с GitHub командой git pull (синхронизация из GitHub в локальный репозиторий)
редактируете какие-то файлы репозитория
добавляете их в staging командой git add .
делаете commit с помощью git commit
когда вы готовы закачать локальные изменения на GitHub, делаете git push

Локально
git add .
git commit -m 'Комментарий к коммиту'
git push 

В консоли на https://www.pythonanywhere.com/user/gan/consoles
* Отменить правки в базе, иначе не даст сделать git pull
git checkout gan/gan.db
* Взять из удаленного репозитория
git pull

Как восстановить проект на www.pythonanywhere.com, если его удалили по таймауту

1. Зарегаться снова, вероятно с новым именем. Например, если username будет AlexusGAN, то шляпа после настроек будет доступна по адресу https://alexusgan.pythonanywhere.com/hat/

2. В локальный файл c:\Users\Pro-GubanovAN\Dropbox\Other\Python\Django\gan\gan\settings.py добавить в массив ALLOWED_HOSTS сайт alexusgan.pythonanywhere.com:
ALLOWED_HOSTS = ['localhost', 'alexusgan.pythonanywhere.com', '127.0.0.1', '192.168.1.247', '192.168.1.158', '[::1]']
Залить файл в репозиторий github

После этого по инструкции https://help.pythonanywhere.com/pages/DeployExistingDjangoProject

3. Открыть bash консоль и склонировать проект:
git clone https://github.com/AlexusGAN/django

4. Создать виртуальное окружение для подходящей версии Питона (3.10 подходит)
mkvirtualenv --python=/usr/bin/python3.10 gan-venv

5. Установить в него django
pip install django

6. На Dashboard выбрать "Open Web Tab", и там выбрать "Add a new web app". В качестве фреймворка выбрать "Manual Configuration", ибо мы разворачиваем уже готовый проект

7. На странице Web Tab указать Virtualenv как /home/AlexusGAN/.virtualenvs/gan-venv

8. На странице Web Tab в секции Code выбрать файл /var/www/alexusgan_pythonanywhere_com_wsgi.py и отредактировать его вот так:
# +++++++++++ DJANGO +++++++++++
# To use your own django app use code like this:
import os
import sys

# assuming your django settings file is at '/home/AlexusGAN/mysite/mysite/settings.py'
# and your manage.py is is at '/home/AlexusGAN/mysite/manage.py'
#path = '/home/myusername/mysite'

path = '/home/AlexusGAN/django/gan'
if path not in sys.path:
    sys.path.append(path)

#os.environ['DJANGO_SETTINGS_MODULE'] = 'mysite.settings'
#os.environ['DJANGO_SETTINGS_MODULE'] = '/home/AlexusGAN/django/gan/gan/settings.py'
os.environ['DJANGO_SETTINGS_MODULE'] = 'gan.settings'

# then:
from django.core.wsgi import get_wsgi_application
application = get_wsgi_application()

9. Сохранить файл (кнопка Save в редакторе) и перезапустить проект AlexusGAN.pythonanywhere.com (по кнопке в редакторе или по зеленой кнопке на Web Tab). 
Посмотреть, нет ли ошибок в файле ошибок. Он доступен на Web Tab в секции Log files

9. Перейти в bash консоли в каталог /django/gan
cd /home/AlexusGAN/django/gan
и выполнить инсталляцию БД. Но не так, как написано ./manage.py migrate (так вылезет ошибка Permission denied), а вот так с python:
python ./manage.py migrate

10. Прописать статики на Web Tab в разделе Static files, по одному на каждое приложение:
URL	      Directory	                          
/static/	/home/AlexusGAN/django/gan/hat/static	 
/static/	/home/AlexusGAN/django/gan/assoc/static	 
/static/	/home/AlexusGAN/django/gan/salo/static

Перезапустить еще раз проект.

11. Убедиться, что Шляпа загружается по адресу https://alexusgan.pythonanywhere.com/hat/ с картинками

12. Если надо обновиться с github, то в bash консоли переходим в каталог django
cd django
и делаем 
~/django (master)$ git pull